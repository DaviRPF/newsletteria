import fetch from 'node-fetch';

// Verificar par√¢metros
const phoneNumber = process.argv[2];
if (!phoneNumber) {
  console.error('‚ùå Uso: node newsletter.js <n√∫mero_telefone>');
  console.error('   Exemplo: node newsletter.js 558481843434');
  process.exit(1);
}

// Validar formato do n√∫mero
if (!phoneNumber.match(/^\d+$/)) {
  console.error('‚ùå N√∫mero inv√°lido! Use apenas d√≠gitos (ex: 558481843434)');
  process.exit(1);
}

console.log(`\nüì± Enviando newsletter para: ${phoneNumber}`);
console.log('‚îÄ'.repeat(50));

async function sendNewsletter() {
  try {
    // Usar o endpoint send-test que envia newsletter de teste
    console.log('üì§ Enviando newsletter...');
    
    const response = await fetch(`http://localhost:3000/api/whatsapp/send-test/${phoneNumber}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: '{}'  // Body vazio mas v√°lido
    });
    
    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ ' + result.message);
      console.log('\nüí° Newsletter enviada com sucesso!');
      console.log('üì≤ Verifique o WhatsApp do n√∫mero informado');
    } else {
      const errorText = await response.text();
      console.error('‚ùå Erro:', response.statusText);
      
      try {
        const error = JSON.parse(errorText);
        console.error('   Detalhes:', error.error || error.message);
        
        if (error.error === 'WhatsApp n√£o est√° conectado') {
          console.log('\nüí° Certifique-se de que o WhatsApp est√° conectado');
          console.log('   Verifique se o QR Code foi escaneado');
        }
      } catch (e) {
        console.error('   Resposta:', errorText);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro de conex√£o:', error.message);
    console.error('\nüí° O servidor n√£o est√° rodando!');
    console.error('   Execute primeiro: npm start');
  }
}

// Executar
sendNewsletter();